{"mappings":"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","sources":["js/game.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n  console.log(\"DOM fully loaded\");\r\n\r\n  const puzzleArea = document.getElementById(\"puzzle_game\");\r\n  const completePopup = document.getElementById(\"complete_popup\");\r\n  const gridSize = 3;\r\n  const pieceSize = 100;\r\n  const gridSpacing = 2;\r\n  let pieces = [];\r\n  let selectedPiece = null;\r\n  let startPosition = null;\r\n\r\n  // 이미지 경로 배열 (실제 이미지 경로로 대체)\r\n  const imagePaths = [\r\n    \"./css/img/mural_1.png\",\r\n    \"./css/img/mural_2.png\",\r\n    \"./css/img/mural_3.png\",\r\n    \"./css/img/mural_4.png\",\r\n    \"./css/img/mural_5.png\",\r\n    \"./css/img/mural_6.png\",\r\n    \"./css/img/mural_7.png\",\r\n    \"./css/img/mural_8.png\",\r\n    \"./css/img/mural_9.png\",\r\n  ];\r\n\r\n  function createPieces() {\r\n    const placedPositions = new Set();\r\n\r\n    for (let i = 0; i < gridSize * gridSize; i++) {\r\n      const piece = document.createElement(\"div\");\r\n      piece.className = \"puzzle_piece\";\r\n      piece.style.position = \"absolute\";\r\n\r\n      // 이미지 요소 생성\r\n      const img = document.createElement(\"img\");\r\n      img.src = imagePaths[i];\r\n      img.style.width = \"100%\";\r\n      img.style.height = \"100%\";\r\n      img.style.objectFit = \"cover\";\r\n\r\n      // 이미지를 퍼즐 조각에 추가\r\n      piece.appendChild(img);\r\n\r\n      let randomCol, randomRow, positionKey;\r\n      do {\r\n        randomCol = Math.floor(Math.random() * gridSize);\r\n        randomRow = Math.floor(Math.random() * gridSize);\r\n        positionKey = `${randomCol},${randomRow}`;\r\n      } while (placedPositions.has(positionKey));\r\n\r\n      placedPositions.add(positionKey);\r\n\r\n      piece.style.left = `${randomCol * (pieceSize + gridSpacing)}px`;\r\n      piece.style.top = `${randomRow * (pieceSize + gridSpacing)}px`;\r\n      piece.dataset.col = randomCol;\r\n      piece.dataset.row = randomRow;\r\n\r\n      piece.addEventListener(\"mousedown\", selectPiece);\r\n      pieces.push(piece);\r\n      puzzleArea.appendChild(piece);\r\n    }\r\n  }\r\n\r\n  function selectPiece(e) {\r\n    // 클릭된 요소가 이미지여도 부모 `.puzzle_piece`를 찾도록 수정\r\n    selectedPiece = e.target.closest(\".puzzle_piece\");\r\n    if (!selectedPiece) return;\r\n\r\n    startPosition = {\r\n      x: parseInt(selectedPiece.style.left),\r\n      y: parseInt(selectedPiece.style.top),\r\n    };\r\n    selectedPiece.style.zIndex = \"1000\";\r\n    document.addEventListener(\"mousemove\", movePiece);\r\n    document.addEventListener(\"mouseup\", dropPiece);\r\n    e.preventDefault();\r\n  }\r\n\r\n  function movePiece(e) {\r\n    if (selectedPiece) {\r\n      const puzzleRect = puzzleArea.getBoundingClientRect();\r\n      let newX = e.clientX - puzzleRect.left - pieceSize / 2;\r\n      let newY = e.clientY - puzzleRect.top - pieceSize / 2;\r\n\r\n      newX = Math.max(0, Math.min(newX, 306 - pieceSize));\r\n      newY = Math.max(0, Math.min(newY, 306 - pieceSize));\r\n\r\n      const gridX =\r\n        Math.round(newX / (pieceSize + gridSpacing)) *\r\n        (pieceSize + gridSpacing);\r\n      const gridY =\r\n        Math.round(newY / (pieceSize + gridSpacing)) *\r\n        (pieceSize + gridSpacing);\r\n\r\n      selectedPiece.style.left = `${gridX}px`;\r\n      selectedPiece.style.top = `${gridY}px`;\r\n    }\r\n  }\r\n\r\n  function dropPiece() {\r\n    if (selectedPiece) {\r\n      const currentX = parseInt(selectedPiece.style.left);\r\n      const currentY = parseInt(selectedPiece.style.top);\r\n\r\n      const targetPiece = pieces.find(\r\n        (piece) =>\r\n          piece !== selectedPiece &&\r\n          parseInt(piece.style.left) === currentX &&\r\n          parseInt(piece.style.top) === currentY\r\n      );\r\n\r\n      if (targetPiece) {\r\n        targetPiece.style.left = `${startPosition.x}px`;\r\n        targetPiece.style.top = `${startPosition.y}px`;\r\n      } else {\r\n        selectedPiece.style.left = `${startPosition.x}px`;\r\n        selectedPiece.style.top = `${startPosition.y}px`;\r\n      }\r\n\r\n      selectedPiece.style.zIndex = \"\";\r\n      selectedPiece = null;\r\n      checkCompletion();\r\n    }\r\n\r\n    document.removeEventListener(\"mousemove\", movePiece);\r\n    document.removeEventListener(\"mouseup\", dropPiece);\r\n  }\r\n\r\n  function checkCompletion() {\r\n    let completed = true;\r\n    for (let i = 0; i < pieces.length; i++) {\r\n      const expectedX = (i % gridSize) * (pieceSize + gridSpacing);\r\n      const expectedY = Math.floor(i / gridSize) * (pieceSize + gridSpacing);\r\n      const actualX = parseInt(pieces[i].style.left);\r\n      const actualY = parseInt(pieces[i].style.top);\r\n\r\n      if (actualX !== expectedX || actualY !== expectedY) {\r\n        completed = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (completed) {\r\n      showcompletePopup();\r\n    }\r\n  }\r\n\r\n  function showcompletePopup() {\r\n    completePopup.classList.add(\"on\");\r\n    disablePieces();\r\n  }\r\n\r\n  function disablePieces() {\r\n    pieces.forEach((piece) => {\r\n      piece.style.cursor = \"default\";\r\n      piece.removeEventListener(\"mousedown\", selectPiece);\r\n    });\r\n  }\r\n\r\n  createPieces();\r\n});\r\n"],"names":[],"version":3,"file":"index.fb67f16b.js.map","sourceRoot":"/__parcel_source_root/"}